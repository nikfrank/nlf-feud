{"version":3,"sources":["../../../client/components/ui-router/ui-router.mock.js"],"names":["angular","module","service","$q","expectedTransitions","transitionTo","stateName","length","expectedState","shift","Error","console","log","deferred","defer","promise","resolve","go","expectTransitionTo","push","ensureAllTransitionsHappened"],"mappings":"AAAA;;AAEAA,QAAQC,MAAR,CAAe,WAAf,EAA4B,EAA5B;AACAD,QAAQC,MAAR,CAAe,WAAf,EAA4BC,OAA5B,CAAoC,QAApC,EAA8C,UAASC,EAAT,EAAa;AACvD,SAAKC,mBAAL,GAA2B,EAA3B;;AAEA,SAAKC,YAAL,GAAoB,UAASC,SAAT,EAAoB;AACpC,YAAI,KAAKF,mBAAL,CAAyBG,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,gBAAIC,gBAAgB,KAAKJ,mBAAL,CAAyBK,KAAzB,EAApB;AACA,gBAAID,kBAAkBF,SAAtB,EAAiC;AAC7B,sBAAMI,MAAM,mCAAmCF,aAAnC,GAAmD,uBAAnD,GAA6EF,SAAnF,CAAN;AACH;AACJ,SALD,MAKO;AACH,kBAAMI,MAAM,+DAA+DJ,SAArE,CAAN;AACH;AACDK,gBAAQC,GAAR,CAAY,yBAAyBN,SAArC;AACA,YAAIO,WAAWV,GAAGW,KAAH,EAAf;AACA,YAAIC,UAAUF,SAASE,OAAvB;AACAF,iBAASG,OAAT;AACA,eAAOD,OAAP;AACH,KAdD;;AAgBA,SAAKE,EAAL,GAAU,KAAKZ,YAAf;;AAEA,SAAKa,kBAAL,GAA0B,UAASZ,SAAT,EAAoB;AAC1C,aAAKF,mBAAL,CAAyBe,IAAzB,CAA8Bb,SAA9B;AACH,KAFD;;AAIA,SAAKc,4BAAL,GAAoC,YAAW;AAC3C,YAAI,KAAKhB,mBAAL,CAAyBG,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,kBAAMG,MAAM,+BAAN,CAAN;AACH;AACJ,KAJD;AAKH,CA9BD","file":"ui-router.mock.js","sourcesContent":["'use strict';\n\nangular.module('stateMock', []);\nangular.module('stateMock').service('$state', function($q) {\n    this.expectedTransitions = [];\n\n    this.transitionTo = function(stateName) {\n        if (this.expectedTransitions.length > 0) {\n            var expectedState = this.expectedTransitions.shift();\n            if (expectedState !== stateName) {\n                throw Error('Expected transition to state: ' + expectedState + ' but transitioned to ' + stateName);\n            }\n        } else {\n            throw Error('No more transitions were expected! Tried to transition to ' + stateName);\n        }\n        console.log('Mock transition to: ' + stateName);\n        var deferred = $q.defer();\n        var promise = deferred.promise;\n        deferred.resolve();\n        return promise;\n    };\n\n    this.go = this.transitionTo;\n\n    this.expectTransitionTo = function(stateName) {\n        this.expectedTransitions.push(stateName);\n    };\n\n    this.ensureAllTransitionsHappened = function() {\n        if (this.expectedTransitions.length > 0) {\n            throw Error('Not all transitions happened!');\n        }\n    };\n});\n"]}